<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 03 Jan 2025 00:32:56 GMT</lastBuildDate><item><title><![CDATA[A Bootiful Podcast: Dez Blanchfield, a tech legend for all ages]]></title><link>https://spring.io/blog/2025/01/02/a-bootiful-podcast-dez-blanchfield</link><guid isPermaLink="true">https://spring.io/blog/2025/01/02/a-bootiful-podcast-dez-blanchfield</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Thu, 02 Jan 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! &lt;code&gt;Happy happy = new Year(2025)!&lt;/code&gt; It&apos;s a new year and a new opportunity! In this episode I talk to my friend and legendary technologist Dez Blanchfield!&lt;/p&gt;
&lt;iframe title=&quot;Australian tech legend Dez Blanchfield&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);height:150px;&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=qqgw3-1793bc0-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[This Year in Spring - December 31st, 2024]]></title><link>https://spring.io/blog/2024/12/31/this-week-in-spring-december-31st-2024</link><guid isPermaLink="true">https://spring.io/blog/2024/12/31/this-week-in-spring-december-31st-2024</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Tue, 31 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi Spring fans! Happy New Year! And welcome to another installment of This &lt;em&gt;Year&lt;/em&gt; in Spring!&lt;/p&gt;
&lt;h2 id=&quot;the-year-that-was&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-year-that-was&quot; aria-label=&quot;the year that was permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The year that was...&lt;/h2&gt;
&lt;p&gt;I write this edition from a desk overlooking the beautiful jungle of Martinique, a beautiful island nation in the French Caribbean. I¡¯m sipping some &lt;em&gt;rhum martinique&lt;/em&gt;, enjoying the semi-sweltering heat, and thinking about the year that&apos;s been &lt;em&gt;2024&lt;/em&gt;. Every year at this time, since 2011, I write &lt;em&gt;this year in spring&lt;/em&gt;, an abbreviated look at the year from the rearview mirror.&lt;/p&gt;
&lt;p&gt;So many amazing things happened this year. It¡¯s sort of difficult to put my finger on any one thing. But, I shall try to narrow it down. To five items. As I always do.&lt;/p&gt;
&lt;p&gt;We¡¯ll have the week&apos;s roundup below, too, as usual.&lt;/p&gt;
&lt;p&gt;So where to begin? Remember, this is meant to be a roundup of the things that most impressed. The things that most took my breath away. Not a roundup of the latest of a given thing. And there have been a ton of amazing things that fit the bill. Let¡¯s dive right into them.&lt;/p&gt;
&lt;h3 id=&quot;spring-ai&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-ai&quot; aria-label=&quot;spring ai permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring AI&lt;/h3&gt;
&lt;p&gt;C¡¯mon. You saw this coming. I¡¯m a contributor to Spring AI, for Pete¡¯s sake! It¡¯s &lt;em&gt;super&lt;/em&gt; good and getting better by the minute! Spring AI is a comprehensive framework for end-to-end integration of the common patterns of AI engineering. It provides robust support for building AI-powered systems and services through the use fo the four pillars of Spring: AOP, portable service abstractions, dependency injection, and auto-configuration.&lt;/p&gt;
&lt;p&gt;And, it&apos;s even at the leading edge of a ton of new and amazing protocols, MCP - Model Context Protocol - which lets you integrate arbitrary data sources with your LLM models. Spring AI MCP is (at least for the moment) a subproject of Spring AI making it trivial to both produce and consume MCP services.&lt;/p&gt;
&lt;p&gt;In Chinese, the word for &apos;love&apos; is &lt;em&gt;ai&lt;/em&gt;. The word for ¡®I&apos; is &apos;wo&apos;. So: &lt;em&gt;wo ai AI&lt;/em&gt;!&lt;/p&gt;
&lt;h3 id=&quot;spring-modulith&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-modulith&quot; aria-label=&quot;spring modulith permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Modulith&lt;/h3&gt;
&lt;p&gt;Look, one of the biggest pet peeves of mine is that I see so many codebases which sort of fly in the face of good object-oriented design, using package structures like &lt;code&gt;app.controllers&lt;/code&gt;, &lt;code&gt;app.services&lt;/code&gt;, &lt;code&gt;app.models&lt;/code&gt;, &lt;code&gt;app.repositories&lt;/code&gt;, etc. In order for this scheme to work, every type (save perhaps the controllers) would need to be &lt;code&gt;public&lt;/code&gt;. Why?_ this is an anti-pattern! Why use a nice object-oriented language if you&apos;re only going to make everything public? The whole point of object orientation is information hiding. If you want everything to effectively be public, in a flat global namespace, just use C! At least that&apos;s a bit more honest.&lt;/p&gt;
&lt;p&gt;But what are the alternatives? There are tons of other approaches that/will guide you to cleaner architecture, and one of my favorites is Spring Modulith. Spring Modulith gives you the tools to build clean, modular codebases with Spring. It extends the framework, adding infrastructure to make modular decoupling easier. And, through the use of conventions and tests backed by ArchUnit, it lets you extend the Java language with a new layer and level of validation to ensure you don&apos;t inadvertently &lt;em&gt;expose&lt;/em&gt; implementation details from one root package (a &quot;module&quot;) to another.&lt;/p&gt;
&lt;p&gt;Trust me (I¡¯m a contributor for a reason!): Once you&apos;ve gone Spring Modulith, you won&apos;t want to go back! Your code will be cleaner and better architectured for the long term and you&apos;ll have more confidence that you&apos;re not accidentally making promises you can&apos;t keep to other would-be dependents!&lt;/p&gt;
&lt;h3 id=&quot;spring-grpc&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-grpc&quot; aria-label=&quot;spring grpc permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring gRPC&lt;/h3&gt;
&lt;p&gt;This is a new &lt;em&gt;experimental&lt;/em&gt; project (but it&apos;s on the Spring Initializr!) that lets you quickly and easily stand up GraalVM-ready gRPC services with Spring Boot! You just define your proto service definitions in the &lt;code&gt;proto&lt;/code&gt; folder. What else do you need to know? Go to start.spring.io, choose gRPC, and hit generate. Build the project using your build tool and it¡¯ll generate the stubs for your services, which you then implement in a Spring Boot project. If you run the resulting jar in the usual way, it¡¯ll bind the gRPC in the usual way to a port directly. If you have &lt;code&gt;spring-boot-starter-web&lt;/code&gt; on the classpath, it¡¯ll expose the gRPC service through the servlet infrastructure. If you have Actuator, it&apos;ll give you metrics about your services. And, soon, if you are using &lt;code&gt;spring-boot-starter-security&lt;/code&gt;, it&apos;ll let you secure your services. And of course, if you select&lt;code&gt;graalvm&lt;/code&gt; on the Spring Initializr, it¡¯ll let you compile the applications into a GraalVM native binary! &lt;em&gt;Nice&lt;/em&gt;. Try it out &lt;em&gt;now&lt;/em&gt; (and I&apos;ll be doing a video in the new year!)&lt;/p&gt;
&lt;h3 id=&quot;spring-security&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-security&quot; aria-label=&quot;spring security permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Security&lt;/h3&gt;
&lt;p&gt;I can&apos;t tell you how impressed I¡¯ve been with Spring Security of late. It¡¯s already a one-stop-shop for all things security, authentication, and authorization. But it keeps getting easier and more awesome. This latest release - 6.4 - includes new or enhanced support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The full OAuth suite: OAuth clients, OAuth resource servers&lt;/li&gt;
&lt;li&gt;Magic passwords where a user can click a link to get instantly logged in&lt;/li&gt;
&lt;li&gt;WebAuthn/Passkeys. Want users to be able to log into your service with just their face or touch id or an external USB-based key? Look no further!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And remember, Spring Authorization Server is getting better and better all the time, too! The newest release makes standing one up trivial. It¡¯s basically a one-liner for the common cases! You can even mix-and-match: have a Spring Authorization Server that lets people redirect OAuth clients to handle authentication and then let them authenticate using their fingers or magic links or whatever. Amazing!&lt;/p&gt;
&lt;h3 id=&quot;performance&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#performance&quot; aria-label=&quot;performance permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h3&gt;
&lt;p&gt;There¡¯s an incredible opportunity implied in using a framework like Spring, because it sits between you and the lower-level runtime, which means that if we - the folks working on Spring - can optimize things at the framework level, we can do so and advantage everyone using the framework. It¡¯s too good a fruit to resist! So we&apos;re always looking for levers we can pull that improve your application. And this year is no different.&lt;/p&gt;
&lt;p&gt;This year, we took our efforts even further. You may know that we have great support for Project CRaC in Spring Boot. We also have amazing support for GraalVM native images. This year we debuted our integrated AppCDS support and previewed our Project Leyden support. I did a video &lt;a href=&quot;https://www.youtube.com/watch?v=zeY3Wg1ieqI&quot;&gt;covering all of these options&lt;/a&gt; except Project Leyden here. For details on Project Leyden, check out this video, which was &lt;a href=&quot;https://www.youtube.com/watch?v=78HV0MRtfiw&quot;&gt;presented at Devoxx Belgium in cooperation with the Java team at Oracle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vroom!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All right, with those five tentpole marquee features introduced, let&apos;s look at..&lt;/p&gt;
&lt;h2 id=&quot;the-week-that-was&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-week-that-was&quot; aria-label=&quot;the week that was permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Week That Was!&lt;/h2&gt;
&lt;p&gt;Here&apos;s your usual dose of goodness from the last week of the new and novel in this the most amazing community ever!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interesting discussion &lt;a href=&quot;https://www.wiz.io/blog/spring-boot-actuator-misconfigurations&quot;&gt;on Spring Boot Actuator misconfigurations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Oldie but a goodie: &lt;a href=&quot;https://www.javacodegeeks.com/2024/10/event-driven-microservices-with-spring-boot-kafka.html&quot;&gt;Event-driven microservices with Spring Boot and Kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A nice discussion on the &lt;a href=&quot;https://martinelli.ch/oracle-json-relational-duality-views-with-spring-boot/&quot;&gt;use of Oracle JSON Relational Duality views with Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;As always, another &lt;a href=&quot;https://www.infoq.com/news/2024/12/spring-news-roundup-dec16-2024/&quot;&gt;great roundup of all things Spring Boot on InfoQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/12/29/spring-ai-mcp-0&quot;&gt;Spring AI MCP 0.3.0 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In last week&apos;s installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;, I talked to Intact¡¯s Luke Shannon about how &lt;a href=&quot;https://spring.io/blog/2024/12/27/a-bootiful-podcast-luke-shannon&quot;&gt;they&apos;re building a developer portal to connect developers building services using Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/12/23/spring-ai-1-0-0-m5-released&quot;&gt;Spring AI 1.0.0. m5 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nice discussion on how to build &lt;a href=&quot;https://www.youtube.com/watch?v=EO6U8-OQVZQ&quot;&gt;a Spring Boot starter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Neat! A video looking &lt;a href=&quot;https://www.youtube.com/watch?v=ictnntknQhA&quot;&gt;at how to build a REST API with Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to build &lt;a href=&quot;https://www.youtube.com/watch?v=wz0xvn14M2E&quot;&gt;Spring Boot microservices with a simple example. (This video is &lt;em&gt;eight hours long&lt;/em&gt;! I haven&apos;t watched it all. But, there&apos;s bound to be something interesting in it!)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Have you been following the videos I&apos;ve been putting out looking a the latest-and-greatest to come of the Spring Boot 3.4 line? Check them all out!
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/t2NEM-Jw430?si=V2JpbgEpNLgN0BWR&quot;&gt;&lt;em&gt;What&apos;s New in Spring Framework 6.2&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/DUIpWkl_ixE?si=3qbNBDkmXu2w9mAx&quot;&gt;What&apos;s New in Spring Data 2024.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/lPreCE97nEw?si=qQQ85t46_p6MKj9P&quot;&gt;What&apos;s New in Spring Security 6.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/gGyg3gU5iY0?si=6amCM8XAB1lyi4n0&quot;&gt;What&apos;s New in Spring Integration 6.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/phbYTF6xAaY?si=imJQt1EkpEC3chVK&quot;&gt;What&apos;s New in Spring Batch 5.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I&apos;ve got more comin&apos;, too! So &lt;a href=&quot;https://youtube.com/@cofffeesoftware&quot;&gt;stay tuned&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I speak, I&apos;m sure, for the entire Spring team when I say to you: &lt;em&gt;HAPPY NEW YEAR&lt;/em&gt;, and we look forward to seeing you in 2025!!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring AI MCP 0.3.0 (Milestone) Released]]></title><link>https://spring.io/blog/2024/12/29/spring-ai-mcp-0</link><guid isPermaLink="true">https://spring.io/blog/2024/12/29/spring-ai-mcp-0</guid><dc:creator><![CDATA[tzolov]]></dc:creator><pubDate>Sun, 29 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;We&apos;re pleased to announce Spring AI MCP &lt;code&gt;0.2.0&lt;/code&gt; milestone release.&lt;/p&gt;
&lt;h2 id=&quot;repository-configuration&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#repository-configuration&quot; aria-label=&quot;repository configuration permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository Configuration&lt;/h2&gt;
&lt;p&gt;Add this Spring milestone repository to your POM:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;repositories&gt;
  &amp;#x3C;repository&gt;
    &amp;#x3C;id&gt;spring-milestones&amp;#x3C;/id&gt;
    &amp;#x3C;name&gt;Spring Milestones&amp;#x3C;/name&gt;
    &amp;#x3C;url&gt;https://repo.spring.io/libs-milestone-local&amp;#x3C;/url&gt;
    &amp;#x3C;snapshots&gt;
      &amp;#x3C;enabled&gt;false&amp;#x3C;/enabled&gt;
    &amp;#x3C;/snapshots&gt;
  &amp;#x3C;/repository&gt;
&amp;#x3C;/repositories&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;major-features&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#major-features&quot; aria-label=&quot;major features permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Major Features&lt;/h2&gt;
&lt;h3 id=&quot;mcp-server-enhancements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mcp-server-enhancements&quot; aria-label=&quot;mcp server enhancements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MCP Server Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Introduced new McpServer factory with builder pattern for flexible configuration&lt;/li&gt;
&lt;li&gt;Added McpAsyncServer with non-blocking operations and reactive support&lt;/li&gt;
&lt;li&gt;Implemented McpSyncServer as synchronous wrapper around async implementation&lt;/li&gt;
&lt;li&gt;Added runtime tool management capabilities&lt;/li&gt;
&lt;li&gt;Introduced server capabilities and implementation information support&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;transport-layer-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#transport-layer-improvements&quot; aria-label=&quot;transport layer improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transport Layer Improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Implemented SseServerTransport with SSE endpoints and message routing&lt;/li&gt;
&lt;li&gt;Added StdioServerTransport for process-based communication&lt;/li&gt;
&lt;li&gt;Enhanced transport error handling and graceful shutdown mechanisms&lt;/li&gt;
&lt;li&gt;Reorganized client transports into dedicated transport package&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;documentation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#documentation&quot; aria-label=&quot;documentation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added comprehensive MCP reference documentation&lt;/li&gt;
&lt;li&gt;Included detailed client/server architecture documentation&lt;/li&gt;
&lt;li&gt;Provided transport implementation and protocol guides&lt;/li&gt;
&lt;li&gt;Added session management and message handling documentation&lt;/li&gt;
&lt;li&gt;Included error handling and recovery strategy guides&lt;/li&gt;
&lt;li&gt;Added architectural diagrams for component relationships&lt;/li&gt;
&lt;li&gt;Provided API documentation with usage examples&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;testing-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#testing-improvements&quot; aria-label=&quot;testing improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added extensive test coverage for server components&lt;/li&gt;
&lt;li&gt;Implemented transport-specific test suites&lt;/li&gt;
&lt;li&gt;Added integration tests for client-server interactions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;breaking-changes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#breaking-changes&quot; aria-label=&quot;breaking changes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Breaking Changes&lt;/h2&gt;
&lt;h3 id=&quot;package-reorganization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#package-reorganization&quot; aria-label=&quot;package reorganization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Reorganization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Relocated transport-related classes to dedicated package:
&lt;ul&gt;
&lt;li&gt;StdioClientTransport: &lt;code&gt;o.s.ai.mcp.client.stdio&lt;/code&gt; ¡æ &lt;code&gt;o.s.ai.mcp.client.transport&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SseClientTransport: &lt;code&gt;o.s.ai.mcp.client.sse&lt;/code&gt; ¡æ &lt;code&gt;o.s.ai.mcp.client.transport&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ServerParameters: &lt;code&gt;o.s.ai.mcp.client.stdio&lt;/code&gt; ¡æ &lt;code&gt;o.s.ai.mcp.client.transport&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;api-changes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#api-changes&quot; aria-label=&quot;api changes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modified StdioClientTransport.errorHandler to private with setter method&lt;/li&gt;
&lt;li&gt;Updated ServerCapabilities to use builder pattern:
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// Old
new ServerCapabilities(experimental, logging, prompts, resources, tools)

// New
ServerCapabilities.builder()
    .experimental(experimental)
    .logging(logging)
    .prompts(listChanged)
    .resources(subscribe, listChanged)
    .tools(listChanged)
    .build()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;module-restructuring&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#module-restructuring&quot; aria-label=&quot;module restructuring permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Module Restructuring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Renamed artifacts for clarity:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spring-ai-mcp-core&lt;/code&gt; ¡æ &lt;code&gt;mcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring-ai-mcp-spring&lt;/code&gt; ¡æ &lt;code&gt;spring-ai-mcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring-ai-mcp&lt;/code&gt; ¡æ &lt;code&gt;mcp-parent&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;other-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#other-improvements&quot; aria-label=&quot;other improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Optimized scheduler usage by removing unnecessary &lt;code&gt;Schedulers.boundedElastic()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Intact's Luke Shannon]]></title><link>https://spring.io/blog/2024/12/27/a-bootiful-podcast-luke-shannon</link><guid isPermaLink="true">https://spring.io/blog/2024/12/27/a-bootiful-podcast-luke-shannon</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Fri, 27 Dec 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! (and happy holidays!) in this installment I talk to Intact&apos;s Luke Shannon about their use of Spring, developer portals, and so much more.&lt;/p&gt;
&lt;iframe title=&quot;Intact¡¯s Luke Shannon on development velocity, micro services with Spring, integration, developer portals, and more &quot; allowtransparency=&quot;true&quot; height=&quot;300&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);height:300px;&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?from=embed&amp;i=vsjqe-17867ec-pb&amp;square=1&amp;share=1&amp;download=1&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;rtl=0&amp;logo_link=&amp;btn-skin=7&amp;size=300&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content:encoded></item></channel></rss>